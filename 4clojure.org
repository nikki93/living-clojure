* 1
** (= ... ...)
* 2
** Math
* 3
** Clojure Strings <=> Java Strings
** (.toUpperCase ...)
* 4
** '(...)
** (list ...)
* 5
** (conj '(...) ...)
* 6
** [...]
** (vector ...)
** (vec '(...))
* 7
** (conj [...] ...)
* 8
** #{...}
** (set '(...))
** (clojure.set/union ... ...)
* 9
** (conj #{...} ...)
* 10
** {...}
** (hash-map ...)
** ({...} :...)
** (:... {...})
* 11
** (conj {...} [... ...]...)
* 12
** (first ...)
** (second ...)
** (last ...)
* 13
** (rest ...)
* 14
** (fn [...] ...)
** #(... % ...)
** (partial ...)
* 15
** (fn [x] (* 2 x))
* 16
** (str ... ...)
* 17
** (map ... ...)
* 18
** (filter ... ...)
* 35
** (let [... ...] ...)
** (let [... ... ... ...] ...)
** (let [...] (let [...] ...))
* 36

